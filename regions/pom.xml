<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.github.prplegoo</groupId>
    <artifactId>region-rework-mod</artifactId>
    <version>0.69.39.23</version>

    <profiles>
        <profile>
            <id>windows</id>
            <properties>
                <game.mod.directory>${user.home}/AppData/Roaming/songsofsyx/mods</game.mod.directory>
                <steam.directory>C:/Program Files (x86)/Steam/steamapps</steam.directory>
                <game.workshop.directory>${steam.directory}/workshop/content/1162750</game.workshop.directory>
                <game.install.directory>${steam.directory}/common/Songs of Syx</game.install.directory>
                <game.mod.uploader.directory>${user.home}/AppData/Roaming/songsofsyx/mods-uploader</game.mod.uploader.directory>
            </properties>
            <activation>
                <os>
                    <family>windows</family>
                </os>
            </activation>
        </profile>
        <profile>
            <id>linux</id>
            <properties>
                <game.mod.directory>${user.home}/.local/share/songsofsyx/mods</game.mod.directory>
                <game.install.directory>${user.home}/.steam/steam/steamapps/common/Songs of Syx</game.install.directory>
                <game.mod.uploader.directory>${user.home}/.local/share/songsofsyx/mods-uploader</game.mod.uploader.directory>
            </properties>
            <activation>
                <os>
                    <family>unix</family>
                </os>
            </activation>
        </profile>
        <profile>
            <id>mods-uploader</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-clean-plugin</artifactId>
                        <executions>
                            <execution>
                                <configuration>
                                    <filesets>
                                        <fileset>
                                            <!-- Remove installed mod from mod uploader directory on clean -->
                                            <directory>${mod.uploader.directory}</directory>
                                            <includes>
                                                <!-- Deletes mod folder with files -->
                                                <include>**</include>
                                            </includes>
                                            <followSymlinks>false</followSymlinks>
                                        </fileset>
                                    </filesets>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <!-- Copy the mod files into the mod uploader folder -->
                            <execution>
                                <id>copy-mod-to-mod-uploader</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${mod.uploader.directory}</outputDirectory>
                                    <includeEmptyDirs>true</includeEmptyDirs>
                                    <overwrite>true</overwrite>
                                    <resources>
                                        <resource>
                                            <directory>${mod.build.output.directory}</directory>
                                            <excludes>
                                                <exclude>**/_src/**</exclude>
                                            </excludes>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <properties>
        <!-- Songs of Syx uses Java 1.8 -->
        <maven.compiler.target>1.8</maven.compiler.target>
        <maven.compiler.source>1.8</maven.compiler.source>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- These settings will go into the mods _Info.txt file -->
        <mod.version>${project.version}</mod.version>
        <mod.name>Region rework</mod.name>
        <mod.description>
Completely reworks regions
        </mod.description>
        <mod.author>PrPleGoo</mod.author>
        <mod.info>
Greetings despot,

This mod is for you if:
- You want more than just raw resources from regions;
- You like to develop regions;
- You want regions to be a little more powerful than in v68 but not as powerful as they were in v67;
- You want a steady stream of prisoners for "purposes";
- You want some logistical interplay between your capital and your regions;

Features:
- You can build refineries and workshops in regions.
- Ship resources to regions to keep them crafting.
- Region production reworked, basing output numbers on available population.
- You get workforce based on a region's population.
- Population numbers in regions have been reduced drastically.
- More negative health to account for lower population levels.
- A food stall to use food instead of admin to grow cities.
- Production scaling now goes off the "normal" values, instead of weird "region" values.
- Global buildings can no longer be upgraded, but you can make more of them to compensate. Health and workforce buildings less so because these buildings are just too good already.
- School reworked to apply your science to regions.
- Law gives you PoWs as tax from a region.
- Slaver's guild building that specializes in PoW output.
- Max level of region building based on terrain/prospect instead of scaling output.
- AI empires use production to do work on their stockpiles.
- Custom NPC behavior to interact with the world map and simulate a real economy.

This mod completely reworks regions.
As per my idea listed in the suggestion forum on discord.
Basically the idea is that regions are just abstracted cities that work on pretty much the same rules as your capital does.
I never really liked that they seemed to operate on a completely separate set of rules.

This also has a lot of balance implications, so make sure you are ready to relearn region management!
Not compatible with existing saves!
Saves made with this mod cannot be loaded without it!
I would also not advise you combine this mod with any of the mods that are not confirmed to be compatible (list bellow).

Known compatible mods, these mods have been used by me or others and no problems have been reported:
- PrPleGoo's Quality of Life Mod, https://steamcommunity.com/sharedfiles/filedetails/?id=3260671025

If you use a different mod than any of the above and notice no game breaking issues, please let me know so I can update the list!

Enjoy!

- a fellow despot

Available on github: https://github.com/PrPleGoo/PrPleGooQoL

Credits:
- Redic, thumbnail art
- Argoon, technical support
- Dinosaure, refactoring
        </mod.info>
        <game.version.major>69</game.version.major>
        <game.version.minor>39</game.version.minor>

        <!-- Build settings -->
        <game.version.directory>V${game.version.major}</game.version.directory>
        <game.jar.name>SongsOfSyx.jar</game.jar.name>
        <game.jar.source.name>SongsOfSyx-sources.jar</game.jar.source.name>
        <game.mod.uploader.content.directory>${game.mod.uploader.directory}/WorkshopContent</game.mod.uploader.content.directory>

        <mod.files.name>mod-files</mod.files.name>
        <mod.install.directory>${game.mod.directory}/${mod.name}</mod.install.directory>
        <mod.uploader.directory>${game.mod.uploader.content.directory}/${mod.name}</mod.uploader.directory>
        <mod.dependency.lib.directory>${project.basedir}/lib</mod.dependency.lib.directory>
        <mod.build.output.directory>${basedir}/target/out/${mod.name}</mod.build.output.directory>
        <mod.files.build.output.directory>${mod.build.output.directory}/${game.version.directory}</mod.files.build.output.directory>
        <mod.script.output.directory>${mod.files.build.output.directory}/script</mod.script.output.directory>
        <mod.source.output.directory>${mod.files.build.output.directory}/script/_src</mod.source.output.directory>
        <mod.files.directory>${project.basedir}/src/main/resources/${mod.files.name}</mod.files.directory>

        <!-- Dependency versions -->
        <junit-jupiter-engine.version>5.9.2</junit-jupiter-engine.version>
        <mockito-core.version>4.11.0</mockito-core.version>
        <assertj-core.version>3.24.2</assertj-core.version>
        <lombok.version>1.18.26</lombok.version>
        <jackson.version>2.17.2</jackson.version>

        <!-- Build plugin versions -->
        <maven-resources-plugin.version>3.2.0</maven-resources-plugin.version>
        <maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>
        <junit-platform-surefire-provider.version>1.3.2</junit-platform-surefire-provider.version>
        <maven-source-plugin.version>3.2.1</maven-source-plugin.version>
        <maven-install-plugin.version>3.1.0</maven-install-plugin.version>
        <maven-clean-plugin.version>3.2.0</maven-clean-plugin.version>
        <maven-shade-plugin.version>3.6.0</maven-shade-plugin.version>
    </properties>

    <dependencies>
        <!-- Game dependency SongsOfSyx.jar -->
        <dependency>
            <groupId>com.songsofsyx</groupId>
            <artifactId>songsofsyx</artifactId>
            <version>${game.version.major}.${game.version.minor}</version>
        </dependency>

        <!-- Lazy Developer -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- Data -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-properties</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <!-- Testing -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit-jupiter-engine.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito-core.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${assertj-core.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <!-- Always use the same name for the jar file -->
        <finalName>${mod.name}</finalName>


        <!-- We don't need the mod-files in our mod jar -->
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <excludes>
                    <exclude>${mod.files.name}/**</exclude>
                </excludes>
                <filtering>false</filtering>
            </resource>
        </resources>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${maven-source-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven-resources-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>${maven-install-plugin.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>${maven-clean-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>${maven-shade-plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>

            <!-- Build a fat / uber jar containing all dependencies -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <artifactSet>
                                <excludes>
                                    <exclude>com.songsofsyx:*</exclude>
                                    <exclude>org.jetbrains:*</exclude>
                                </excludes>
                            </artifactSet>
                            <createDependencyReducedPom>false</createDependencyReducedPom>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <configuration>
                    <filesets>
                        <fileset>
                            <!-- Remove installed mod from games mod folder on clean -->
                            <directory>${mod.install.directory}</directory>
                            <includes>
                                <!-- Deletes mod folder with files -->
                                <include>**</include>
                            </includes>
                            <followSymlinks>false</followSymlinks>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>

            <!-- Prepare game dependencies (thx @ https://github.com/MilanDierick for pointing me to the game source files) -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <executions>
                    <!-- Install game jar as dependency code -->
                    <execution>
                        <id>install-game-jar</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>install-file</goal>
                        </goals>
                        <configuration>
                            <groupId>com.songsofsyx</groupId>
                            <artifactId>songsofsyx</artifactId>
                            <version>${game.version.major}.${game.version.minor}</version>
                            <packaging>jar</packaging>
                            <file>${game.install.directory}/${game.jar.name}</file>
                            <generatePom>true</generatePom>
                        </configuration>
                    </execution>

                    <!-- Install game source jar as dependency code -->
                    <execution>
                        <id>install-game-sources-jar</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>install-file</goal>
                        </goals>
                        <configuration>
                            <groupId>com.songsofsyx</groupId>
                            <artifactId>songsofsyx</artifactId>
                            <version>${game.version.major}.${game.version.minor}</version>
                            <packaging>jar</packaging>
                            <classifier>sources</classifier>
                            <file>${game.install.directory}/info/${game.jar.source.name}</file>
                            <generatePom>false</generatePom>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Attach mod source code -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>package</phase>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Build mod files -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>

                    <!-- Copy files such as assets from the resources source-->
                    <execution>
                        <id>copy-mod-files</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${mod.files.build.output.directory}</outputDirectory>
                            <includeEmptyDirs>true</includeEmptyDirs>
                            <resources>
                                <resource>
                                    <directory>${mod.files.directory}</directory>
                                    <excludes>
                                        <!-- Everything beginning with a dot -->
                                        <exclude>**/.*</exclude>
                                        <exclude>_Info.txt</exclude>
                                    </excludes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>

                    <!-- Copy mod _Info.txt file and replace tokens -->
                    <execution>
                        <id>copy-mod-info</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${mod.build.output.directory}</outputDirectory>
                            <includeEmptyDirs>true</includeEmptyDirs>
                            <resources>
                                <resource>
                                    <directory>${mod.files.directory}</directory>
                                    <includes>
                                        <include>_Info.txt</include>
                                    </includes>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>

                    <!-- Copy the actual compiled jar into the correct folder -->
                    <execution>
                        <id>copy-mod-script-jar</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${mod.script.output.directory}</outputDirectory>
                            <includeEmptyDirs>true</includeEmptyDirs>
                            <resources>
                                <resource>
                                    <directory>${project.build.directory}</directory>
                                    <includes>
                                        <include>${project.build.finalName}.jar</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>

                    <!-- Copy source code -->
                    <execution>
                        <id>copy-mod-source-code</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${mod.source.output.directory}</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.build.directory}</directory>
                                    <includes>
                                        <include>${project.build.finalName}-sources.jar</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>

                    <!-- Copy the mod files into the game -->
                    <execution>
                        <id>copy-mod-to-game</id>
                        <phase>install</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${mod.install.directory}</outputDirectory>
                            <includeEmptyDirs>true</includeEmptyDirs>
                            <overwrite>true</overwrite>
                            <resources>
                                <resource>
                                    <directory>${mod.build.output.directory}</directory>
                                    <excludes>
                                        <exclude>**/_src/**</exclude>
                                    </excludes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Testing -->
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <dependencies>
                    <dependency>
                        <groupId>org.junit.platform</groupId>
                        <artifactId>junit-platform-surefire-provider</artifactId>
                        <version>${junit-platform-surefire-provider.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
    </build>
</project>